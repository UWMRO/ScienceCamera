digraph {
    label="Python Dependencies";

    subgraph cluster_0 {
        label="Standard library";
        __future__;
        threading;
        re;
        time;
        os;
        datetime;
        shutil;
        telnetlib;
        logging;
        glob;
        signal;
        subprocess;
        webbrowser;
        Queue;
        thread;
        io;
    }

    subgraph cluster_1 {
        label="Dependencies";
        wx;
        astropy;
        numpy;
        twisted;
        pandas;
        matplotlib;
        paramiko;
    }

    subgraph cluster_2 {
        label="MRO files";
        add_linear_spacer;
        control_classes;
        enhanced_status_bar;
        evora_ftp_server;
        log_classes;
        tel;
        my_logger;
        evora_server;
        photo_acquisition_gui;
        transfer;
        acquisitionClasses;
        evora_test_client;
        reset_andor;
        transfer_images;
        andor;
        scripting_Classes;
    }

    // add_linear_spacer.py
    // stdlib
    __future__ -> add_linear_spacer[color=blue];
    threading -> add_linear_spacer[color=blue];
    time -> add_linear_spacer[color=blue];
    os -> add_linear_spacer[color=blue];
    datetime -> add_linear_spacer[color=blue];
    shutil -> add_linear_spacer[color=blue];

    // deps
    wx -> add_linear_spacer;
    astropy -> add_linear_spacer;
    numpy -> add_linear_spacer;
    io -> add_linear_spacer;
    twisted -> add_linear_spacer;


    // control_classes.py
    wx -> control_classes;


    // enhanced_status_bar.py
    wx -> enhanced_status_bar;


    // evora_ftp_server.py
    __future__ -> evora_ftp_server[color=blue];
    twisted -> evora_ftp_server;
    add_linear_spacer -> evora_ftp_server[color=red];


    // log_classes.py
    __future__ -> log_classes[color=blue];
    wx -> log_classes;
    add_linear_spacer -> log_classes[color=red];


    // tel.py
    telnetlib -> tel[color=blue];
    time -> tel[color=blue];


    // my_logger.py
    __future__ -> my_logger[color=blue];
    logging -> my_logger[color=blue];
    datetime -> my_logger[color=blue];


    // evora_server.py
    // stdlib
    glob -> evora_server[color=blue];
    os -> evora_server[color=blue];
    signal -> evora_server[color=blue];
    subprocess -> evora_server[color=blue];
    time -> evora_server[color=blue];
    threading -> evora_server[color=blue];
    datetime -> evora_server[color=blue];

    // deps
    pandas -> evora_server;
    numpy -> evora_server;
    astropy -> evora_server;
    twisted -> evora_server;

    // MRO files
    andor -> evora_server[color=red];
    add_linear_spacer -> evora_server[color=red];
    my_logger -> evora_server[color=red];


    // photo_acquisition_gui.py
    // stdlib
    os -> photo_acquisition_gui[color=blue];
    signal -> photo_acquisition_gui[color=blue];
    subprocess -> photo_acquisition_gui[color=blue];
    threading -> photo_acquisition_gui[color=blue];
    webbrowser -> photo_acquisition_gui[color=blue];

    // deps
    wx -> photo_acquisition_gui;
    matplotlib -> photo_acquisition_gui;
    numpy -> photo_acquisition_gui;
    astropy -> photo_acquisition_gui;
    twisted -> photo_acquisition_gui;

    // MRO files
    acquisitionClasses -> photo_acquisition_gui[color=red];
    add_linear_spacer -> photo_acquisition_gui[color=red];
    enhanced_status_bar -> photo_acquisition_gui[color=red];
    log_classes -> photo_acquisition_gui[color=red];
    my_logger -> photo_acquisition_gui[color=red];
    scripting_Classes -> photo_acquisition_gui[color=red];


    // transfer.py
    __future__ -> transfer[color=blue];
    os -> transfer[color=blue];
    paramiko -> transfer;

    
    // acquisitionClasses.py
    // stdlib
    __future__ -> acquisitionClasses[color=blue];
    time -> acquisitionClasses[color=blue];
    thread -> acquisitionClasses[color=blue];
    threading -> acquisitionClasses[color=blue];
    Queue -> acquisitionClasses[color=blue];

    // deps
    wx -> acquisitionClasses;
    pandas -> acquisitionClasses;

    // MRO files
    enhanced_status_bar -> acquisitionClasses[color=red];
    add_linear_spacer -> acquisitionClasses[color=red];
    my_logger -> acquisitionClasses[color=red];


    // evora_test_client.py
    __future__ -> evora_test_client[color=blue];
    twisted -> evora_test_client;


    // reset_andor.py
    os -> reset_andor[color=blue];
    re -> reset_andor[color=blue];
    subprocess -> reset_andor[color=blue];


    // transfer_images.py
    __future__ -> transfer_images[color=blue];
    twisted -> transfer_images;
    Queue -> transfer_images[color=blue];
    threading -> transfer_images[color=blue];
    time -> transfer_images[color=blue];
    add_linear_spacer -> transfer_images[color=red];


    // scripting_Classes.py
    __future__ -> scripting_Classes[color=blue];
    wx -> scripting_Classes;
    thread -> scripting_Classes[color=blue];
    add_linear_spacer -> scripting_Classes[color=red];
}
